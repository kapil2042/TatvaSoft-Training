// <auto-generated />
using System;
using CI_Platform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CI_Platform.Data.Migrations
{
    [DbContext(typeof(CiPlatformContext))]
    partial class CiPlatformContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CI_Platform.Models.Admin", b =>
                {
                    b.Property<long>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("admin_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AdminId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("email");

                    b.Property<string>("FisrtName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("fisrt_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("AdminId")
                        .HasName("PK__admin__43AA4141D396DC5C");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.Banner", b =>
                {
                    b.Property<long>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("banner_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BannerId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("image");

                    b.Property<int?>("SortOrder")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("BannerId")
                        .HasName("PK__banner__10373C341AC474CF");

                    b.ToTable("banner", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.City", b =>
                {
                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("city_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CityId"), 1L, 1);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("CityId")
                        .HasName("PK__city__031491A85C6EEDB1");

                    b.HasIndex("CountryId");

                    b.ToTable("city", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.CmsPage", b =>
                {
                    b.Property<long>("CsmPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("csm_page_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CsmPageId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("slug");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("CsmPageId")
                        .HasName("PK__cms_page__44CC3BCBC27FB954");

                    b.ToTable("cms_page", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.Comment", b =>
                {
                    b.Property<long>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("comment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CommentId"), 1L, 1);

                    b.Property<string>("ApprovalStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("approval_status")
                        .HasDefaultValueSql("('PENDING')");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("text")
                        .HasColumnName("comment_text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("CommentId")
                        .HasName("PK__comment__E7957687F236B288");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("comment", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.Country", b =>
                {
                    b.Property<long>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CountryId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ISO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("CountryId")
                        .HasName("PK__country__7E8CD055605D1A23");

                    b.ToTable("country", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.FavoriteMission", b =>
                {
                    b.Property<long>("FavouriteMissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("favourite_mission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FavouriteMissionId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("FavouriteMissionId")
                        .HasName("PK__favorite__94E4D8CAD44FBBA8");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("favorite_mission", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.GoalMission", b =>
                {
                    b.Property<long>("GoalMissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("goal_mission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GoalMissionId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("GoalObjectiveText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("goal_objective_text");

                    b.Property<int>("GoalValue")
                        .HasColumnType("int")
                        .HasColumnName("goal_value");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("GoalMissionId")
                        .HasName("PK__goal_mis__358E02C75DE3B800");

                    b.HasIndex("MissionId");

                    b.ToTable("goal_mission", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.Mission", b =>
                {
                    b.Property<long>("MissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionId"), 1L, 1);

                    b.Property<string>("Availability")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("availability");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint")
                        .HasColumnName("city_id");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("MissionType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("mission_type");

                    b.Property<string>("OrganizationDetails")
                        .HasColumnType("text")
                        .HasColumnName("organization_details");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("organization_name");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text")
                        .HasColumnName("short_description");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<long>("ThemeId")
                        .HasColumnType("bigint")
                        .HasColumnName("theme_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("title");

                    b.Property<int>("TotalSeat")
                        .HasColumnType("int")
                        .HasColumnName("total_seat");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionId")
                        .HasName("PK__mission__B5419AB2B0F1C163");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ThemeId");

                    b.ToTable("mission", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.MissionApplicatoin", b =>
                {
                    b.Property<long>("MissionApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_application_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionApplicationId"), 1L, 1);

                    b.Property<DateTime>("AppliedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("applied_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ApprovalStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("approval_status");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("MissionApplicationId")
                        .HasName("PK__mission___DF92838A809146CF");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("mission_applicatoin", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.MissionDocument", b =>
                {
                    b.Property<long>("MissionDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_document_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionDocumentId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("document_name");

                    b.Property<string>("DocumentPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("document_path");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("document_type");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionDocumentId")
                        .HasName("PK__mission___E80E0CC8A78482DD");

                    b.HasIndex("MissionId");

                    b.ToTable("mission_document", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.MissionInvite", b =>
                {
                    b.Property<long>("MissionInviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_invite_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionInviteId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("FromUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("from_user_id");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<long>("ToUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("to_user_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionInviteId")
                        .HasName("PK__mission___A97ED158BA1BD986");

                    b.HasIndex("FromUserId");

                    b.HasIndex("MissionId");

                    b.HasIndex("ToUserId");

                    b.ToTable("mission_invite", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.MissionMedium", b =>
                {
                    b.Property<long>("MissionMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_media_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionMediaId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("MediaDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("media_default")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MediaName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("media_name");

                    b.Property<string>("MediaPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("media_path");

                    b.Property<string>("MediaType")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("media_type");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionMediaId")
                        .HasName("PK__mission___848A78E865CB8954");

                    b.HasIndex("MissionId");

                    b.ToTable("mission_media", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.MissionRating", b =>
                {
                    b.Property<long>("MissionRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_rating_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionRatingId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("MissionRatingId")
                        .HasName("PK__mission___320E5172235F45E7");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("mission_rating", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.MissionSkill", b =>
                {
                    b.Property<long>("MissionSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_skill_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionSkillId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionSkillId")
                        .HasName("PK__mission___82712008E8ADA4DF");

                    b.HasIndex("MissionId");

                    b.HasIndex("SkillId");

                    b.ToTable("mission_skill", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.MissionTheme", b =>
                {
                    b.Property<long>("MissionThemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_theme_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionThemeId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<byte?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionThemeId")
                        .HasName("PK__mission___4925C5ACAB231112");

                    b.ToTable("mission_theme", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.Notification", b =>
                {
                    b.Property<long>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("NotificationId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FromUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("NotificationText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("NotificationId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("CI_Platform.Models.NotificationSettings", b =>
                {
                    b.Property<long>("NotificationSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("NotificationSettingsId"), 1L, 1);

                    b.Property<int>("CommentApprovation")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromEmail")
                        .HasColumnType("int");

                    b.Property<int>("MissionApplicationApprovation")
                        .HasColumnType("int");

                    b.Property<int>("NewMessage")
                        .HasColumnType("int");

                    b.Property<int>("NewMisson")
                        .HasColumnType("int");

                    b.Property<int>("News")
                        .HasColumnType("int");

                    b.Property<int>("RecommendMission")
                        .HasColumnType("int");

                    b.Property<int>("RecommendStory")
                        .HasColumnType("int");

                    b.Property<int>("StoryApprovation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("VolunteerGoal")
                        .HasColumnType("int");

                    b.Property<int>("VolunteerHour")
                        .HasColumnType("int");

                    b.HasKey("NotificationSettingsId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationSettings");
                });

            modelBuilder.Entity("CI_Platform.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("skill_name");

                    b.Property<byte?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("SkillId")
                        .HasName("PK__skill__FBBA8379DF4A0FA3");

                    b.ToTable("skill", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.Story", b =>
                {
                    b.Property<long>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("story_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StoryId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40000)
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("published_at");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("text")
                        .HasColumnName("short_description");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('DRAFT')");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<long?>("Views")
                        .HasColumnType("bigint")
                        .HasColumnName("views");

                    b.HasKey("StoryId")
                        .HasName("PK__story__66339C56E50F7247");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("story", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.StoryInvite", b =>
                {
                    b.Property<long>("StoryInviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("story_invite_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StoryInviteId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("FromUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("from_user_id");

                    b.Property<long>("StoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("story_id");

                    b.Property<long>("ToUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("to_user_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("StoryInviteId")
                        .HasName("PK__story_in__044978678FFE745F");

                    b.HasIndex("FromUserId");

                    b.HasIndex("StoryId");

                    b.HasIndex("ToUserId");

                    b.ToTable("story_invite", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.StoryMedium", b =>
                {
                    b.Property<long>("StoryMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("story_media_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StoryMediaId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("MediaPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("media_path");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("media_type");

                    b.Property<long>("StoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("story_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("StoryMediaId")
                        .HasName("PK__story_me__29BD053CEDFDD8AD");

                    b.HasIndex("StoryId");

                    b.ToTable("story_media", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.Timesheet", b =>
                {
                    b.Property<long>("TimesheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("timesheet_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TimesheetId"), 1L, 1);

                    b.Property<int?>("Action")
                        .HasColumnType("int")
                        .HasColumnName("action");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DateVolunteered")
                        .HasColumnType("datetime")
                        .HasColumnName("date_volunteered");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('SUBMIT_FOR_APPROVAL')");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time")
                        .HasColumnName("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("TimesheetId")
                        .HasName("PK__timeshee__7BBF506820EDF912");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("timesheet", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"), 1L, 1);

                    b.Property<string>("Availability")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("availability");

                    b.Property<string>("Avatar")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("avatar");

                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("city_id")
                        .HasDefaultValueSql("((1))");

                    b.Property<long>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("country_id")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Department")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("department");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("email");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("employee_id");

                    b.Property<string>("FirstName")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("last_name");

                    b.Property<string>("LinkedInUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("linked_in_url");

                    b.Property<string>("ManagerDetails")
                        .HasColumnType("text")
                        .HasColumnName("manager_details");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("ProfileText")
                        .HasMaxLength(1000)
                        .HasColumnType("text")
                        .HasColumnName("profile_text");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("WhyIVolunteer")
                        .HasMaxLength(1000)
                        .HasColumnType("text")
                        .HasColumnName("why_i_volunteer");

                    b.HasKey("UserId")
                        .HasName("PK__users__B9BE370FCD73FD03");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.UserNotification", b =>
                {
                    b.Property<long>("UserNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserNotificationId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Isread")
                        .HasColumnType("int");

                    b.Property<long>("NotificationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("UserNotificationId");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotification");
                });

            modelBuilder.Entity("CI_Platform.Models.UserSkill", b =>
                {
                    b.Property<long>("UserSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_skill_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserSkillId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skill_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("UserSkillId")
                        .HasName("PK__user_ski__FD3B576B9A4E246A");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("user_skill", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Generated_at");

                    b.Property<int>("Used")
                        .HasColumnType("int");

                    b.Property<string>("UserToken1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserToken");

                    b.HasKey("Id");

                    b.ToTable("user_token", (string)null);
                });

            modelBuilder.Entity("CI_Platform.Models.City", b =>
                {
                    b.HasOne("CI_Platform.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__city__country_id__1C873BEC");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CI_Platform.Models.Comment", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("Comments")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__comment__mission__52E34C9D");

                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__comment__user_id__51EF2864");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.FavoriteMission", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("FavoriteMissions")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__favorite___missi__5A846E65");

                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany("FavoriteMissions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__favorite___user___59904A2C");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.GoalMission", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("GoalMissions")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__goal_miss__missi__603D47BB");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("CI_Platform.Models.Mission", b =>
                {
                    b.HasOne("CI_Platform.Models.City", "City")
                        .WithMany("Missions")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__mission__city_id__41B8C09B");

                    b.HasOne("CI_Platform.Models.Country", "Country")
                        .WithMany("Missions")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__mission__country__42ACE4D4");

                    b.HasOne("CI_Platform.Models.MissionTheme", "Theme")
                        .WithMany("Missions")
                        .HasForeignKey("ThemeId")
                        .IsRequired()
                        .HasConstraintName("FK__mission__theme_i__40C49C62");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("CI_Platform.Models.MissionApplicatoin", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("MissionApplicatoins")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_a__missi__67DE6983");

                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany("MissionApplicatoins")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_a__user___66EA454A");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.MissionDocument", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("MissionDocuments")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_d__missi__6D9742D9");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("CI_Platform.Models.MissionInvite", b =>
                {
                    b.HasOne("CI_Platform.Models.User", "FromUser")
                        .WithMany("MissionInviteFromUsers")
                        .HasForeignKey("FromUserId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_i__from___73501C2F");

                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("MissionInvites")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_i__missi__753864A1");

                    b.HasOne("CI_Platform.Models.User", "ToUser")
                        .WithMany("MissionInviteToUsers")
                        .HasForeignKey("ToUserId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_i__to_us__74444068");

                    b.Navigation("FromUser");

                    b.Navigation("Mission");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("CI_Platform.Models.MissionMedium", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("MissionMedia")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_m__missi__7CD98669");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("CI_Platform.Models.MissionRating", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("MissionRatings")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_r__missi__047AA831");

                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany("MissionRatings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_r__user___038683F8");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.MissionSkill", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("MissionSkills")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_s__missi__4CF5691D");

                    b.HasOne("CI_Platform.Models.Skill", "Skill")
                        .WithMany("MissionSkills")
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_s__skill__4C0144E4");

                    b.Navigation("Mission");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("CI_Platform.Models.NotificationSettings", b =>
                {
                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany("NotificationSettings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.Story", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("Stories")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__story__mission_i__220B0B18");

                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany("Stories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__story__user_id__2116E6DF");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.StoryInvite", b =>
                {
                    b.HasOne("CI_Platform.Models.User", "FromUser")
                        .WithMany("StoryInviteFromUsers")
                        .HasForeignKey("FromUserId")
                        .IsRequired()
                        .HasConstraintName("FK__story_inv__from___27C3E46E");

                    b.HasOne("CI_Platform.Models.Story", "Story")
                        .WithMany("StoryInvites")
                        .HasForeignKey("StoryId")
                        .IsRequired()
                        .HasConstraintName("FK__story_inv__story__29AC2CE0");

                    b.HasOne("CI_Platform.Models.User", "ToUser")
                        .WithMany("StoryInviteToUsers")
                        .HasForeignKey("ToUserId")
                        .IsRequired()
                        .HasConstraintName("FK__story_inv__to_us__28B808A7");

                    b.Navigation("FromUser");

                    b.Navigation("Story");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("CI_Platform.Models.StoryMedium", b =>
                {
                    b.HasOne("CI_Platform.Models.Story", "Story")
                        .WithMany("StoryMedia")
                        .HasForeignKey("StoryId")
                        .IsRequired()
                        .HasConstraintName("FK__story_med__story__2F650636");

                    b.Navigation("Story");
                });

            modelBuilder.Entity("CI_Platform.Models.Timesheet", b =>
                {
                    b.HasOne("CI_Platform.Models.Mission", "Mission")
                        .WithMany("Timesheets")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__timesheet__missi__37FA4C37");

                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany("Timesheets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__timesheet__user___370627FE");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.User", b =>
                {
                    b.HasOne("CI_Platform.Models.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__users__city_id__4959E263");

                    b.HasOne("CI_Platform.Models.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__users__country_i__4A4E069C");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CI_Platform.Models.UserNotification", b =>
                {
                    b.HasOne("CI_Platform.Models.Notification", "Notification")
                        .WithMany("UserNotifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.UserSkill", b =>
                {
                    b.HasOne("CI_Platform.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK__user_skil__skill__567ED357");

                    b.HasOne("CI_Platform.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__user_skil__user___558AAF1E");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CI_Platform.Models.City", b =>
                {
                    b.Navigation("Missions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CI_Platform.Models.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Missions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CI_Platform.Models.Mission", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavoriteMissions");

                    b.Navigation("GoalMissions");

                    b.Navigation("MissionApplicatoins");

                    b.Navigation("MissionDocuments");

                    b.Navigation("MissionInvites");

                    b.Navigation("MissionMedia");

                    b.Navigation("MissionRatings");

                    b.Navigation("MissionSkills");

                    b.Navigation("Stories");

                    b.Navigation("Timesheets");
                });

            modelBuilder.Entity("CI_Platform.Models.MissionTheme", b =>
                {
                    b.Navigation("Missions");
                });

            modelBuilder.Entity("CI_Platform.Models.Notification", b =>
                {
                    b.Navigation("UserNotifications");
                });

            modelBuilder.Entity("CI_Platform.Models.Skill", b =>
                {
                    b.Navigation("MissionSkills");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("CI_Platform.Models.Story", b =>
                {
                    b.Navigation("StoryInvites");

                    b.Navigation("StoryMedia");
                });

            modelBuilder.Entity("CI_Platform.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavoriteMissions");

                    b.Navigation("MissionApplicatoins");

                    b.Navigation("MissionInviteFromUsers");

                    b.Navigation("MissionInviteToUsers");

                    b.Navigation("MissionRatings");

                    b.Navigation("NotificationSettings");

                    b.Navigation("Stories");

                    b.Navigation("StoryInviteFromUsers");

                    b.Navigation("StoryInviteToUsers");

                    b.Navigation("Timesheets");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
